substitutions:
  name: "seeedstudio-iot-button"
  friendly_name: "Seeed Studio IoT Button"

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  name_add_mac_suffix: true
  project:
    name: "seeedstudio.iot_button"
    version: "2.0"
  platformio_options:
    board_upload.maximum_size: 4194304
  min_version: "2024.3.2" # Fix logger compile error on ESP32-C6 esphome#6323
  on_boot:
    priority: -100.0
    then:
      - light.turn_on: blue_led

esp32:
  board: esp32-c6-devkitc-1
  variant: esp32c6
  flash_size: 4MB # upload.flash_size
  framework:
    type: esp-idf

# Enable logging
logger:
  hardware_uart: USB_SERIAL_JTAG
  level: DEBUG

# Enable Home Assistant API
api:

ota:
  - platform: esphome

wifi:
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "seeedstudio-iot-button"
  
  # WiFi network status events
  on_connect:
    then:
      - logger.log: "WiFi Connected!"
      # Show green color for 3 seconds then turn off to save power
      - light.turn_on: blue_led
      - delay: 1s
      - light.turn_off: blue_led
      # - light.turn_on:
      #     id: rgb_led
      #     brightness: 100%
      #     red: 0%
      #     green: 100%
      #     blue: 0%
      # - delay: 3s
      # - light.turn_off: rgb_led

  on_disconnect:
    then:
      - logger.log: "WiFi Disconnected!"
      - light.turn_on: blue_led
      - delay: 5s
      - light.turn_off: blue_led

captive_portal:

output:
  - platform: gpio
    pin: GPIO2
    id: user_led
    inverted: True
  - platform: gpio
    pin: GPIO18
    id: enable_pin

# Switch to control the LED strip power
switch:
  - platform: output
    name: "LED Strip Power"
    output: enable_pin
    id: led_power
    restore_mode: ALWAYS_ON  # Auto-enable on startup
    internal: true

  # Virtual switches for button actions
  - platform: template
    name: "Switch 1"
    id: virtual_toggle_1
    optimistic: true
    turn_on_action:
      - logger.log: "Single Short Clicked"
      - logger.log: "Switch 1 turned ON"
      # Toggle blue LED to indicate button press
      - light.turn_on:
          id: rgb_led
          effect: "Blink"
      - delay: 1s
      - light.turn_off: rgb_led
      # Add your switch-on action
    turn_off_action:
      - logger.log: "Single Short Clicked"
      - logger.log: "Switch 1 turned OFF"
      # Toggle blue LED to indicate button press
      - light.turn_on:
          id: rgb_led
          effect: "Blink"
      - delay: 1s
      - light.turn_off: rgb_led
      # Add your closing action

  - platform: template
    name: "Switch 2"
    id: virtual_toggle_2
    optimistic: true
    turn_on_action:
      - logger.log: "Double Clicked"
      - logger.log: "Switch 2 turned ON"
      # Double blink blue LED to indicate button press
      - light.turn_on: 
          id: rgb_led
          brightness: 100%
          red: 100%
          green: 50%
          blue: 0%
          effect: "Subtle Flicker"
      - delay: 1s
      - light.turn_off: rgb_led
      # Add your switch-on action
    turn_off_action:
      - logger.log: "Double Clicked"
      - logger.log: "Switch 2 turned OFF"
      # Double blink blue LED to indicate button press
      - light.turn_on: 
          id: rgb_led
          brightness: 100%
          red: 100%
          green: 50%
          blue: 0%
          effect: "Subtle Flicker"
      - delay: 1s
      - light.turn_off: rgb_led
      # Add your closing action

  - platform: template
    name: "Switch 3"
    id: virtual_toggle_3
    optimistic: true
    turn_on_action:
      - logger.log: "Long Press"
      - logger.log: "Switch 3 turned ON"
      # Long blue LED on to indicate button press
      - light.turn_on:
          id: rgb_led
          effect: "Rainbow"
      - delay: 1s
      - light.turn_off: rgb_led
      # Add your switch-on action
    turn_off_action:
      - logger.log: "Long Press"
      - logger.log: "Switch 3 turned OFF"
      # Long blue LED on to indicate button press
      - light.turn_on:
          id: rgb_led
          effect: "Rainbow"
      - delay: 1s
      - light.turn_off: rgb_led
      # Add your closing action

light:
  - platform: binary
    name: "SeeedStudio IoT Button Blue LED"
    output: user_led
    id: blue_led
    internal: true

  # WS2812B RGB LED definition using ESP32 RMT LED Strip
  - platform: esp32_rmt_led_strip
    internal: true
    rmt_channel: 0
    pin: GPIO19
    num_leds: 1
    chipset: WS2812
    rgb_order: GRB
    restore_mode: ALWAYS_OFF
    is_rgbw: False
    name: "RGB Status LED"
    id: rgb_led
    effects:
      - random:
          name: "Random Color"
          transition_length: 5s
          update_interval: 10s
      - addressable_rainbow:
          name: "Rainbow"
      - strobe:
          name: "Blink"
          colors:
            - state: True
              brightness: 100%
              red: 100%
              green: 0%
              blue: 50%
              duration: 500ms
            - state: False
              duration: 500ms
      - flicker:
          name: "Subtle Flicker"
          alpha: 95%
          intensity: 1.5%

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO9
      inverted: True
    name: "SeeedStudio IoT Button"
    on_multi_click:
    - timing:
        - ON for at most 200ms
        - OFF for at least 0.5s
      then:
        - logger.log: "Single Short Clicked"
        - switch.toggle: virtual_toggle_1
    - timing:
        - ON for at most 200ms
        - OFF for at most 0.5s
        - ON for at most 200ms
        - OFF for at least 0.2s
      then:
        - logger.log: "Double Clicked"
        - switch.toggle: virtual_toggle_2
    - timing:
        - ON for 1s to 2.5s
        - OFF for at least 0.5s
      then:
        - logger.log: "Long Press"
        - switch.toggle: virtual_toggle_3
